<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="bunifuThinButton21.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALUAAAApCAYAAABz92iRAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIjSURBVHhe7dy/S9RhHMDx/iK3Jjcnt6ZwcbIhggZbcsmh
        ycGgbLghcHBQhBoOGpwEkQTRISJCcTAIbqgQQxzEhkfej/d86bgfo93z4f2CLxznj+l9D5/73vPcvSQF
        Y9QKx6gVjlErHKNWOEatcEZGffX3Om0d7aXnH1fSo82Xafrd0zSxPOPldecX7dHgfPtVan/dSRdXl91K
        +w2N+tPp5/yPCJqwD398S50/v7o/le4W7dHg9slBWtxq5TaJe5C+qHkF8EdPPiyl35fn3Wel8TKq056o
        +cWHawtDXwHSuGGimF1/0TNF9ERN+Qat2jCWMG8XTdQUz1Iu1ejN7kZa3W/nxzlq7nIweDtDq1Y0zOh8
        eta5jZqRg9FDqhkrNSt2jpp7f9wqkWp2/PN7Xq1z1A9Wn+VlW6oZI8j917O3UU++nRv5CY1UCz59zFHz
        QIrAqBWOUSsco1Y4Rq1wjFrhGLXCMWqF00TNpzB8GiPVromaHXoe1VIETdTso2Y/tVQz9i+xjylHXbbs
        STUrW6hz1IweFO5crZqVLdQ5arT23udLqlH5fho0UbNKc3jxS+ek+4xUB44hMmmU7dNN1GDQLue8pBoQ
        NIsxJ8qLnqjBSk3Y5WSuNK6Yn1mh/w0afVGDUYS7IbwCeEfpKXONC0aMMj/zxnDQia2BURe8ArhFMtV6
        nG9qe3n974ujh+X7HYcZGbVUI6NWOEatcIxa4Ri1gknpBsW2kvqIneyNAAAAAElFTkSuQmCC
</value>
  </data>
</root>